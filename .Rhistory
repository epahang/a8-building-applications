shiny::runApp()
install.packages("rvest")
install.packages("wordcloud")
install.packages("tm")
shiny::runApp()
shiny::runApp()
shiny::runApp()
getwd()
setwd(~/Documents/INFO498F/a8-building-applications)
setwd("~/Documents/INFO498F/a8-building-applications")
getwd()
setwd("~/Documents/INFO498F/a8-building-applications")
shiny::runApp()
shiny::runApp()
shiny::runApp()
iris_data <- data("iris")
View(iris_data)
data("iris")
View(iris)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp('~/Documents/INFO498F/lecture-15-exercises/exercise-1')
shiny::runApp()
shiny::runApp()
shiny::runApp('~/Documents/INFO498F/lecture-15-exercises/example-2')
shiny::runApp()
shiny::runApp()
shiny::runApp()
View(data)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
# Load packages
library(shiny)
library(dplyr)
library(plotly)
# Load iris data
data("iris")
# Plot function for iris data
createPlot <- function(df, species_type, measure) {
dataframe <- filter(df, Species == species_type)
p <- plot_ly(data = dataframe, x = eval(parse(text = measure)), y = Petal.Length, mode = "markers")
return(p)
}
createPlot(iris, "Setosa", "Petal.Width")
# Load packages
library(shiny)
library(dplyr)
library(plotly)
# Load iris data
data("iris")
# Plot function for iris data
createPlot <- function(df, species_type, measure) {
dataframe <- filter(df, Species == species_type)
p <- plot_ly(data = dataframe, x = measure, y = Petal.Length, mode = "markers")
return(p)
}
createPlot(iris, "Setosa", "Petal.Width")
# Load packages
library(shiny)
library(dplyr)
library(plotly)
# Load iris data
data("iris")
# Plot function for iris data
createPlot <- function(iris, species_type, measure) {
dataframe <- filter(iris, Species == species_type)
p <- plot_ly(data = dataframe, x = measure, y = Petal.Length, mode = "markers")
return(p)
}
createPlot(iris, "Setosa", "Petal.Width")
createPlot(iris, "Setosa", "Petal.Width")
shiny::runApp('~/Documents/INFO498F/lab-8')
shiny::runApp('~/Documents/INFO498F/lab-8')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
plot_ly(data = iris, x = Sepal.Length, y = Petal.Length, mode = "markers",
color = Species)
createPlot(iris, "Setosa", "Petal.Width")
# Load packages
library(shiny)
library(dplyr)
library(plotly)
# Load iris data
data("iris")
# Plot function for iris data
createPlot <- function(df, species_type, measure) {
dataframe <- filter(df, Species == species_type)
p <- plot_ly(data = dataframe, x = Sepal.Length, y = Petal.Length, mode = "markers")
return(p)
}
createPlot(iris, "Setosa", "Petal.Width")
createPlot <- function(df, species_type) {
dataframe <- filter(df, Species == species_type)
p <- plot_ly(data = dataframe, x = Sepal.Length, y = Petal.Length, mode = "markers")
return(p)
}
createPlot(iris, "Setosa")
# Load packages
library(shiny)
library(dplyr)
library(plotly)
# Load iris data
data("iris")
# Plot function for iris data
createPlot <- function(df, species_type) {
dataframe <- filter(df, Species == species_type)
p <- plot_ly(data = dataframe, x = Sepal.Length, y = Petal.Length, mode = "markers", color = Species)
return(p)
}
createPlot(iris, "Setosa")
#plot_ly(data = iris, x = Sepal.Length, y = Petal.Length, mode = "markers",
#        color = Species)
createPlot <- function(df, species_type) {
dataframe <- filter(df, Species == species_type)
p <- plot_ly(data = dataframe, x = Sepal.Length, y = Petal.Length, mode = "markers")
return(p)
}
createPlot(iris, "Setosa")
# Load packages
library(shiny)
library(dplyr)
library(plotly)
# Load iris data
data("iris")
# Plot function for iris data
createPlot <- function(df, species_type) {
dataframe <- filter(df, Species == species_type)
p <- plot_ly(data = dataframe, x = Sepal.Length, y = Petal.Length, mode = "markers")
return(p)
}
createPlot(iris, "Setosa")
#plot_ly(data = iris, x = Sepal.Length, y = Petal.Length, mode = "markers",
#        color = Species)
createPlot <- function(df, species_type) {
dataframe <- filter(df, Species == species_type)
p <- plot_ly(data = dataframe, x = Sepal.Length, y = Petal.Length, mode = "markers")
return(p)
}
createPlot(iris, "setosa")
# Load packages
library(shiny)
library(dplyr)
library(plotly)
# Load iris data
data("iris")
# Plot function for iris data
createPlot <- function(df, species_type) {
dataframe <- filter(df, Species == species_type)
p <- plot_ly(data = dataframe, x = Sepal.Length, y = Petal.Length, mode = "markers", size = Petal.Width)
return(p)
}
createPlot(iris, "setosa")
shiny::runApp()
shiny::runApp()
# Load packages
library(shiny)
library(dplyr)
library(plotly)
# Load iris data
data("iris")
# Plot function for iris data
createPlot <- function(df, species_type) {
dataframe <- filter(df, Species == species_type)
p <- plot_ly(data = dataframe, x = Sepal.Length, y = Petal.Length, mode = "markers",
size = Petal.Width, color = Sepal.Width)
return(p)
}
createPlot(iris, "setosa")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
# Load iris data
data("iris")
# Plot function for iris data
createPlot <- function(df, species_type) {
dataframe <- filter(df, Species == species_type)
p <- plot_ly(data = dataframe, x = Sepal.Length, y = Petal.Length, mode = "markers",
size = Petal.Width, color = Sepal.Width)
return(p)
}
createPlot(iris, "virginica")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp('~/Documents/INFO498F/lecture-15-exercises/exercise-1')
shiny::runApp()
shiny::runApp()
# Load packages
library(shiny)
library(dplyr)
library(plotly)
# Load iris data
data("iris")
# Plot function for iris data
create_Plot <- function(df, species_type) {
dataframe <- filter(df, Species == species_type)
p <- plot_ly(data = dataframe, x = Sepal.Length, y = Petal.Length, mode = "markers",
size = Petal.Width, color = Sepal.Width)
return(p)
}
create_Plot(iris, "virginica")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp('~/Documents/INFO498F/lab-8')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
# Load packages
library(shiny)
library(dplyr)
library(plotly)
# Load iris data
data("iris")
# Plot function for iris data
create_Plot <- function(df, species_type) {
dataframe <- filter(df, Species == species_type)
p <- plot_ly(data = dataframe, x = Sepal.Length, y = Petal.Length, mode = "markers",
color = Sepal.Width)
return(p)
}
create_Plot(iris, "virginica")
# Load packages
library(shiny)
library(dplyr)
library(plotly)
# Load iris data
data("iris")
# Plot function for iris data
create_Plot <- function(df, species_type) {
dataframe <- filter(df, Species == species_type)
p <- plot_ly(data = dataframe, x = Sepal.Length, y = Petal.Length, mode = "markers",
size = Petal.Width, color = Sepal.Width)
return(p)
}
create_Plot(iris, "virginica")
# Load packages
library(shiny)
library(dplyr)
library(plotly)
# Load iris data
data("iris")
# Plot function for iris data
create_Plot <- function(df, species_type) {
dataframe <- filter(df, Species == species_type)
p <- plot_ly(data = dataframe, x = Sepal.Length, y = Petal.Length, mode = "markers",
size = Petal.Width /2, color = Sepal.Width)
return(p)
}
create_Plot(iris, "virginica")
library(shiny)
library(dplyr)
library(plotly)
# Load iris data
data("iris")
# Plot function for iris data
create_Plot <- function(df, species_type) {
dataframe <- filter(df, Species == species_type)
p <- plot_ly(data = dataframe, x = Sepal.Length, y = Petal.Length, mode = "markers",
size = Petal.Width /5, color = Sepal.Width)
return(p)
}
create_Plot(iris, "virginica")
# Load packages
library(shiny)
library(dplyr)
library(plotly)
# Load iris data
data("iris")
# Plot function for iris data
create_Plot <- function(df, species_type) {
dataframe <- filter(df, Species == species_type)
p <- plot_ly(data = dataframe, x = Sepal.Length, y = Petal.Length, mode = "markers",
size = 1 + Petal.Width/3, color = Sepal.Width)
return(p)
}
create_Plot(iris, "virginica")
# Load packages
library(shiny)
library(dplyr)
library(plotly)
# Load iris data
data("iris")
# Plot function for iris data
create_Plot <- function(df, species_type) {
dataframe <- filter(df, Species == species_type)
p <- plot_ly(data = dataframe, x = Sepal.Length, y = Petal.Length, mode = "markers",
size = 5 + Petal.Width/3, color = Sepal.Width)
return(p)
}
create_Plot(iris, "virginica")
# Load packages
library(shiny)
library(dplyr)
library(plotly)
# Load iris data
data("iris")
# Plot function for iris data
create_Plot <- function(df, species_type) {
dataframe <- filter(df, Species == species_type)
p <- plot_ly(data = dataframe, x = Sepal.Length, y = Petal.Length, mode = "markers",
size = 5 + Petal.Width/10, color = Sepal.Width)
return(p)
}
create_Plot(iris, "virginica")
# Load packages
library(shiny)
library(dplyr)
library(plotly)
# Load iris data
data("iris")
# Plot function for iris data
create_Plot <- function(df, species_type) {
dataframe <- filter(df, Species == species_type)
p <- plot_ly(data = dataframe, x = Sepal.Length, y = Petal.Length, mode = "markers",
size =  Petal.Width-1 /10, color = Sepal.Width)
return(p)
}
create_Plot(iris, "virginica")
# Load packages
library(shiny)
library(dplyr)
library(plotly)
# Load iris data
data("iris")
# Plot function for iris data
create_Plot <- function(df, species_type) {
dataframe <- filter(df, Species == species_type)
p <- plot_ly(data = dataframe, x = Sepal.Length, y = Petal.Length, mode = "markers", color = Sepal.Width)
return(p)
}
create_Plot(iris, "virginica")
# Load packages
library(shiny)
library(dplyr)
library(plotly)
# Load iris data
data("iris")
# Plot function for iris data
create_Plot <- function(df, species_type) {
dataframe <- filter(df, Species == species_type)
p <- plot_ly(data = dataframe, x = Sepal.Length, y = Petal.Length, mode = "markers",
size = Petal.Width /20, color = Sepal.Width)
return(p)
}
create_Plot(iris, "virginica")
# Load packages
library(shiny)
library(dplyr)
library(plotly)
# Load iris data
data("iris")
# Plot function for iris data
create_Plot <- function(df, species_type) {
dataframe <- filter(df, Species == species_type)
p <- plot_ly(data = dataframe, x = Sepal.Length, y = Petal.Length, mode = "markers",
size = Petal.Width -10, color = Sepal.Width)
return(p)
}
create_Plot(iris, "virginica")
# Load packages
library(shiny)
library(dplyr)
library(plotly)
# Load iris data
data("iris")
# Plot function for iris data
create_Plot <- function(df, species_type) {
dataframe <- filter(df, Species == species_type)
p <- plot_ly(data = dataframe, x = Sepal.Length, y = Petal.Length, mode = "markers",
size = Petal.Width, color = Sepal.Width)
return(p)
}
create_Plot(iris, "virginica")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
# Load packages
# Load packages
library(shiny)
library(dplyr)
library(plotly)
# Load iris data
data("iris")
# Plot function for iris data
create_Plot <- function(df, species_type) {
dataframe <- filter(df, Species == species_type)
p <- plot_ly(data = dataframe, x = Sepal.Length, y = Petal.Length, mode = "markers",
color = Sepal.Width)
return(p)
}
create_Plot(iris, "virginica")
shiny::runApp()
shiny::runApp()
input$flower_species
flower_species
shiny::runApp()
shiny::runApp()
shiny::runApp()
# Plot function for iris data
create_Plot <- function(df, species_type) {
dataframe <- filter(df, Species == species_type)
p <- plot_ly(data = dataframe, x = Sepal.Length, y = Petal.Length, mode = "markers",
color = Sepal.Width)
return()
}
data("iris")
create_Plot(iris, 'setosa')
library(dplyr)
library(plotly)
# Plot function for iris data
create_Plot <- function(df, species_type) {
dataframe <- filter(df, Species == species_type)
p <- plot_ly(data = dataframe, x = Sepal.Length, y = Petal.Length, mode = "markers",
color = Sepal.Width)
return()
}
data("iris")
create_Plot(iris, 'setosa')
library(dplyr)
library(plotly)
# Plot function for iris data
create_Plot <- function(df, species_type) {
dataframe <- filter(df, Species == species_type)
p <- plot_ly(data = dataframe, x = Sepal.Length, y = Petal.Length, mode = "markers",
color = Sepal.Width)
return(p)
}
data("iris")
create_Plot(iris, 'setosa')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
View(createPlot)
View(createPlot)
View(createPlot)
View(createPlot)
shiny::runApp()
shiny::runApp()
